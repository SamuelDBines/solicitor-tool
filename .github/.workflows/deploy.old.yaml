name: CI/CD for Monorepo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Test, Build, and Deploy UI
  ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        working-directory: applications/ui
        run: npm ci

      - name: Build UI
        working-directory: applications/ui
        run: npm run build

      - name: Build Docker Image
        working-directory: applications/ui
        run: |
          docker build -t your-dockerhub-username/ui:${{ github.sha }} -f Dockerfile .

      - name: Push Docker Image
        working-directory: applications/ui
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push your-dockerhub-username/ui:${{ github.sha }}

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl set image deployment/ui-deployment ui=your-dockerhub-username/ui:${{ github.sha }}
          kubectl rollout status deployment/ui-deployment

  # Step 2: Test, Build, and Deploy Core
  core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        working-directory: applications/core
        run: npm ci

      - name: Run Tests
        working-directory: applications/core
        run: npm test

      - name: Prisma Migrations
        working-directory: applications/core
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy

      - name: Build Core
        working-directory: applications/core
        run: npm run build

      - name: Build Docker Image
        working-directory: applications/core
        run: |
          docker build -t your-dockerhub-username/core:${{ github.sha }} -f Dockerfile .

      - name: Push Docker Image
        working-directory: applications/core
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push your-dockerhub-username/core:${{ github.sha }}

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl set image deployment/core-deployment core=your-dockerhub-username/core:${{ github.sha }}
          kubectl rollout status deployment/core-deployment
