// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String?
  PersonGroupToUser Member[]
}

model Member {
  id    Int     @id @default(autoincrement())
  user  User  @relation(fields: [userId], references: [id])
  userId Int  
  personGroup PersonGroup @relation(fields: [personGroupId], references: [id])
  personGroupId Int
  tasks Task[]
  events Event[]
}

model PersonGroup {
  id    Int     @id @default(autoincrement())
  name  String?
  password String?
  members Member[]
  tasks Task[]

}

model Task {
  id Int @id @default(autoincrement())
  name String
  description String
  type String
  member Member[] 
  personGroupId Int
  personGroup PersonGroup @relation(fields: [personGroupId], references: [id])
  events Event[]
}

model Event {
  id Int @id @default(autoincrement())
  name String
  description String
  startTime DateTime
  endTime DateTime
  createdAt DateTime
  updatedAt DateTime
  members Member[]
  taskId Int
  task Task @relation(fields: [taskId], references: [id])
}

model Property {
  id    Int     @id @default(autoincrement())
  name  String?
  address String?
  postalCode String?
  // tenant InteractionRole? @relation(fields: [interactionRoleId], references: [id])
}



// model Process {
//   id Int @id @default(autoincrement())
//   name String
//   tenantId Int
// }